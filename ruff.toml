# Same as Black by default, but can be overridden.
line-length = 120 # From your previous .flake8 and format.sh
indent-width = 4

# Assume Python 3.10 (lowest version in your CI matrix).
target-version = "py310"

# List of files/directories to exclude.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache", # Redundant if mypy is fully removed, but good to keep
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "venv", # Common venv name
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    # Your specific exclusions from mypy command in format.sh and ci.yml:
    "notification/discord.py",
    "utils/logo.py",
    "src/turndown/turndown.py",
    "src/turndown/commonmark_rules.py",
    "example",
    # "main.py", # main.py was excluded but likely should be linted/formatted
    "moodle/moodle_notification_handler.py",
    "src/services/markdown/rules/commonmark.py"
]

[lint]
# Enable Pyflakes (F) and a subset of pycodestyle (E) by default.
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "B",  # flake8-bugbear
    "C90", # McCabe complexity
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "ANN",# flake8-annotations (basic checks, not full Mypy)
    "S",  # flake8-bandit (security)
    "BLE",# flake8-blind-except
    "A",  # flake8-builtins
    "COM",# flake8-commas
    "DTZ",# flake8-datetimez
    "T20",# flake8-print
    "ISC",# flake8-implicit-str-concat
    "Q",  # flake8-quotes
    "PT", # flake8-pytest-style
    "RUF",# Ruff-specific rules
]

ignore = [
    "E501", # Line too long, handled by formatter
    "ANN401", # Dynamically typed expressions (Any) are disallowed - Often too noisy initially
]

# Allow fix for all enabled rules (when --fix or --fix-only is provided).
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.mccabe]
# Default is 10, like Flake8.
max-complexity = 10

[lint.flake8-annotations]
mypy-init-return = true
suppress-dummy-args = true
suppress-none-returning = true

[lint.isort]
force-sort-within-sections = true
known-first-party = ["src", "tests"] # Adjust if your project structure differs

[lint.per-file-ignores]
"tests/*" = ["S101", "ANN001", "ANN002", "ANN003", "ANN201", "ANN202", "ANN204", "PT011"] # Ignore asserts and all annotations in tests for now, and broad pytest.raises
"src/core/config/generator.py" = ["T201"] # Allow prints in interactive config generator
"src/ui/animated/glitch.py" = ["T201", "S311", "ANN001", "ANN201", "ANN202"] # Allow prints, insecure random for UI, and no annotations for curses
"src/ui/cli/screen.py" = ["T201", "ANN001", "ANN201", "ANN202"] # Allow prints and no annotations for curses UI
"src/services/markdown/*" = [
    "ANN001", "ANN002", "ANN003",
    "ANN201", "ANN202", "ANN204", "ANN205"
] # Ignore all annotation rules for the markdown service for now

[format]
# Use double quotes for strings (like Black).
quote-style = "double"

# Indent with spaces, rather than tabs (like Black).
indent-style = "space"

# Respect magic trailing commas (like Black).
skip-magic-trailing-comma = false

# Automatically detect the appropriate line ending (like Black).
line-ending = "auto"

# Format code examples in docstrings. (Experimental, but powerful)
# docstring-code-format = true
# docstring-code-line-length = "dynamic"
